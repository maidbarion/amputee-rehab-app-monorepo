{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/markshaw/Desktop/and-internal/amputee-rehab-app-monorepo/mobile/styles/components/Button.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n\\n  width: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Button as PaperButton } from 'react-native-paper';\nimport styled, { css } from '@emotion/native';\nimport colors from \"../constants/ColorScheme\";\nvar StyledButton = styled(PaperButton)(_templateObject(), function (props) {\n  if (props.primary) {\n    return colors.blueDark;\n  } else if (props.secondary) {\n    return colors.yellowDark;\n  }\n}, function (props) {\n  if (props.small) {\n    return '100px';\n  } else if (props.large) {\n    return '200px';\n  }\n});\n\nvar Button = function Button(_ref) {\n  var children = _ref.children,\n      _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'contained' : _ref$mode,\n      color = _ref.color,\n      _ref$onPress = _ref.onPress,\n      onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress,\n      props = _objectWithoutProperties(_ref, [\"children\", \"mode\", \"color\", \"onPress\"]);\n\n  return React.createElement(StyledButton, _extends({\n    mode: mode,\n    color: color,\n    onPress: onPress\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/markshaw/Desktop/and-internal/amputee-rehab-app-monorepo/mobile/styles/components/Button.js"],"names":["React","Button","PaperButton","styled","css","colors","StyledButton","props","primary","blueDark","secondary","yellowDark","small","large","children","mode","color","onPress"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,oBAAtC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,iBAA5B;AACA,OAAOC,MAAP;AAEA,IAAMC,YAAY,GAAGH,MAAM,CAACD,WAAD,CAAT,oBACI,UAACK,KAAD,EAAW;AAC7B,MAAIA,KAAK,CAACC,OAAV,EAAmB;AACjB,WAAOH,MAAM,CAACI,QAAd;AACD,GAFD,MAEO,IAAIF,KAAK,CAACG,SAAV,EAAqB;AAC1B,WAAOL,MAAM,CAACM,UAAd;AACD;AACF,CAPe,EASP,UAACJ,KAAD,EAAW;AAClB,MAAIA,KAAK,CAACK,KAAV,EAAiB;AACf,WAAO,OAAP;AACD,GAFD,MAEO,IAAIL,KAAK,CAACM,KAAV,EAAiB;AACtB,WAAO,OAAP;AACD;AACF,CAfe,CAAlB;;AAkBA,IAAMZ,MAAM,GAAG,SAATA,MAAS,OAA2E;AAAA,MAAxEa,QAAwE,QAAxEA,QAAwE;AAAA,uBAA9DC,IAA8D;AAAA,MAA9DA,IAA8D,0BAAvD,WAAuD;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,0BAAnCC,OAAmC;AAAA,MAAnCA,OAAmC,6BAAzB,YAAM,CAAE,CAAiB;AAAA,MAAZV,KAAY;;AACxF,SACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAEQ,IAApB;AAA0B,IAAA,KAAK,EAAEC,KAAjC;AAAwC,IAAA,OAAO,EAAEC;AAAjD,KAA8DV,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGO,QADH,CADF;AAKD,CAND;;AAQA,eAAeb,MAAf","sourcesContent":["import React from 'react';\nimport { Button as PaperButton } from 'react-native-paper';\nimport styled, { css } from '@emotion/native';\nimport colors from '../constants/ColorScheme';\n\nconst StyledButton = styled(PaperButton)`\n  background-color: ${(props) => {\n    if (props.primary) {\n      return colors.blueDark;\n    } else if (props.secondary) {\n      return colors.yellowDark;\n    }\n  }};\n\n  width: ${(props) => {\n    if (props.small) {\n      return '100px';\n    } else if (props.large) {\n      return '200px';\n    }\n  }};\n`;\n\nconst Button = ({ children, mode = 'contained', color, onPress = () => {}, ...props }) => {\n  return (\n    <StyledButton mode={mode} color={color} onPress={onPress} {...props}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}